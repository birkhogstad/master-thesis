---

---

<experience-question>
	<p>Hvor mye kjennskap har du til CI/CD?</p>
	<div class="answers">
		<button class="option never-used-before">
			<p>Aldri h√∏rt om</p>
		</button>
		<button class="option used-a-little">
			<p>Har noe kjennskap</p>
		</button>
		<button class="option uses-actively">
			<p>Har mye erfaring</p>
		</button>
	</div>
</experience-question>


<script>
import { datadogRum } from "@datadog/browser-rum";

	class ExperienceQuestion extends HTMLElement {
		constructor() {
			super();

			const buttons = Array.from(this.querySelectorAll('button.option')) as HTMLButtonElement[];
			const neverUsedButton = this.querySelector('button.never-used-before') as HTMLButtonElement;
			const usedALittleButton = this.querySelector('button.used-a-little') as HTMLButtonElement;
			const usesActivelyButton = this.querySelector('button.uses-actively') as HTMLButtonElement;

			if (!buttons || !neverUsedButton || !usedALittleButton || !usesActivelyButton) {
				return;
			}

			function send_event(event_name: string) {
				//datadogRum
				console.log(`User experience: ${event_name}`);
				datadogRum.addAction('experience_eventCID', {
					event_category: 'experience CI/CD',
					event_label: event_name,
				});

				buttons.forEach((button) => {
					button.disabled = true;
				});
			}

			neverUsedButton.addEventListener('click', () => {
				send_event('never-used-before');
				neverUsedButton.classList.add('selected');
			});

			usedALittleButton.addEventListener('click', () => {
				send_event('used-a-little');
				usedALittleButton.classList.add('selected');
			});

			usesActivelyButton.addEventListener('click', () => {
				send_event('uses-actively');
				usesActivelyButton.classList.add('selected');
			});
		}
	}

	if (!customElements.get('experience-question')) {
		customElements.define('experience-question', ExperienceQuestion);
	}
</script>

<style>
	h3 {
		margin-top: 2rem;
	}

	.answers {
		display: grid;
		grid-template-columns: 1fr 1fr 1fr;
		grid-template-rows: 1fr;
		gap: 1rem;
		row-gap: 2rem;
		margin-bottom: 2rem;
	}

	.option {
		display: flex;
		align-items: center;
		justify-content: center;
		margin-top: 0rem !important;
		padding: 1rem;
	}

	.selected {
		color: var(--sl-color-text-invert);
		background-color: var(--sl-color-bg-accent);
	}

	button {
		border-radius: 0.5rem;
	}
</style>